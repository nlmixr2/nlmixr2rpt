[{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Accessing_Figures_and_Tables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Accessing Figures and Tables","text":"create report_fit.yaml file defined figures tables reporting. However may want reuse report objects outside Word PowerPoint. example may want use inside Shiny Apps RMarkdown document. vignette outlines can build objects outside nlmixr2rpt workflow.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Accessing_Figures_and_Tables.html","id":"creating-figures-and-tables","dir":"Articles","previous_headings":"","what":"Creating figures and tables","title":"Accessing Figures and Tables","text":"First need load appropriate libraries. need onbrand library tables figures generated based type report. Specifically default figure dimensions change based report type. initialize empty Word report onbrand. report type extracted object functions . nlmixr2 fit object analysis. load example package. Next read yaml file using yaml_read_fit(). using stripped example testing. contents yaml file stored rptdetails list element returned. Now can use rptdetails object just created create figures tables using build_figures() build_tables() functions respectively.","code":"library(nlmixr2rpt) library(onbrand)    obnd = read_template(   template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),   mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\")) fit = fetch_fit_example() rptdetails = yaml_read_fit(   obnd    = obnd,   rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),   fit     = fit)$rptdetails bfres = build_figures(obnd       = obnd,                       fit        = fit,                        rptdetails = rptdetails)  btres = build_tables(obnd        = obnd,                       fit        = fit,                        rptdetails = rptdetails)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Accessing_Figures_and_Tables.html","id":"using-report-objects-in-rmarkdown","dir":"Articles","previous_headings":"","what":"Using report objects in RMarkdown","title":"Accessing Figures and Tables","text":"can look help two build functions . objects create contain information figures tables defined report_fit.yaml file. access figure just need specify figure ID. example path title figure containing dv_vs_pred figure can found : can include RMarkdown using following: Tables used similiar fashion. code extract flextable object title pest_table. attaches title caption displays . Parameter Estimates Parameter Est. SE %RSE Back-transformed(95%CI) BSV(CV%) Shrink(SD)% Log Ka 0.476 0.203 42.7 1.61 (1.08, 2.39) 69.8 1.23%< Log Cl 1.02 0.0754 7.42 2.76 (2.38, 3.2) 26.1 2.36%< Log V 3.46 0.0632 1.83 31.8 (28.1, 36) 13.8 9.71%< add.sd 0.696   0.696","code":"fig_path  = bfres$rptfigs$dv_vs_pred$figure[[1]] fig_title = bfres$rptfigs$dv_vs_pred$title_proc ![`r fig_title`](`r fig_path`){width=80%} tab_ft    = btres$rpttabs$pest_table$table$ft[[1]] tab_title = btres$rpttabs$pest_table$title_proc tab_ft_knit = flextable::set_caption(tab_ft, caption = tab_title)  tab_ft_knit"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Howto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Howtos","text":"article introduce specific examples generate specific types reporting elements.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Howto.html","id":"dealing-with-large-tables","dir":"Articles","previous_headings":"","what":"Dealing with large tables","title":"Howtos","text":"Sometimes tables large place one page. include kind reported output need span large table across several pages. example assumes large amount data want common set row data table followed amount reported data. example consider subject-level timecourse data. may want subject IDs preserved across several sheets. use span_table() function onbrand package. load package can use following example datasets returned mk_lg_tbl() function:: lg_tbl_row_common - dataframe rows common sub table lg_tbl_row_common_head Header information (number columns lg_tbl_row_common) lg_tbl_body- Data spread across multiple pages/slides (number rows lg_tbl_row_common) lg_tbl_body_head - header information body data (number columns lg_tbl_body) data formatted correctly can call span_table() spread large table across smaller tables: notes_detect option look table per-page basis presence notes table_body input. Using detected notes constrcut table notes eac table. First create list mapping initialisms verbose text. Now need reformat data way can used reporting: note detected creates string format: note1: verbose text 1, note2: verbose text 2. Now t_res can returned table nlmixr2rpt yaml file. See configuration file example:","code":"library(onbrand) # Creating the test data tbl_res = mk_lg_tbl()  # Spanning the data across several tables res = span_table(table_body      = tbl_res$lg_tbl_body,            row_common      = tbl_res$lg_tbl_row_common,            table_body_head = tbl_res$lg_tbl_body_head,            row_common_head = tbl_res$lg_tbl_row_common_head,            max_row         = 16,            max_col         = 10,            notes_detect    = c(\"BQL\", \"NC\")) notes = list(   \"BQL\" = \"Below the level of quantification\",   \"NC\" = \"Not calculated\") t_res = list() for(tidx in 1:length(res[[\"tables\"]])){   t_res[[\"ft\"]][[tidx]] = res[[\"tables\"]][[tidx]][[\"ft\"]]      # Now we construct the notes for the current table   if(is.null(res[[\"tables\"]][[tidx]][[\"notes\"]])){     # If the table has no notes, then we just use \"\"     t_res[[\"notes\"]][[tidx]]   = \"\"   } else {     # This will keep only the notes found     tmp_notes = notes[res[[\"tables\"]][[tidx]][[\"notes\"]]]     tmp_notes = paste0(names(tmp_notes), \": \", unlist(tmp_notes))     tmp_notes = paste0(tmp_notes, collapse=\", \")     t_res[[\"notes\"]][[tidx]]   = tmp_notes   } }"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Howto.html","id":"report-configuration-file-report_fit_test_lg_tbl-yaml","dir":"Articles","previous_headings":"Dealing with large tables","what":"Report configuration file report_fit_test_lg_tbl.yaml","title":"Howtos","text":"","code":"placeholders:   CMPD: Compound Name   CUNITS: ng/ml   TUNITS: days   RUN: RUNN   TEST: \"'ls()'\"   TEST2: ls()   OBJ: sprintf(\"%3g\", fit$objf) parameters:   lCLint:     md:  \"CL~int~ (L/hr)\"     txt: \"CLint (L/hr)\"   TV_ka:     md:  \"k~a~ (1/hr)\"     txt: \"ka  (1/hr)\"   log_CIRC0:     md:  \"log(CIRC~0~)\"     txt: \"log(CIRC0)\"   prop.err:     md:  \"Prop Err\"     txt: \"Prop Err\" covariates:   cat:  NULL   cont: NULL options:   output_dir:   \"file.path(tempdir(), '===RUN===')\"   resolution:   300   fig_stamp:          \"source: ===FILE===\"   figenv_preamble: |-     library(\"ggplot2\")     library(\"xpose\")     library(\"ggforce\")     xpdb = xpose.nlmixr2::xpose_data_nlmixr(fit)   tabenv_preamble: NULL tables:   lg_tbl:         orientation: \"portrait\"     caption:     \"Large Table\"     title:       \"Large Table\"     cmd: |-       tbl_res = mk_lg_tbl()        res =       span_table(         table_body      = tbl_res$lg_tbl_body,         row_common      = tbl_res$lg_tbl_row_common,         table_body_head = tbl_res$lg_tbl_body_head,         row_common_head = tbl_res$lg_tbl_row_common_head,         max_row         = 16,         max_col         = 10,         notes_detect    = c(\"BQL\", \"NC\"))        notes = list(         \"BQL\" = \"Below the level of quantification\",          \"NC\" = \"Not calculated\")        t_res = list()       for(tidx in 1:length(res[[\"tables\"]])){         t_res[[\"ft\"]][[tidx]] = res[[\"tables\"]][[tidx]][[\"ft\"]]                  if(is.null(res[[\"tables\"]][[tidx]][[\"notes\"]])){           t_res[[\"notes\"]][[tidx]]   = \"\"         } else {           tmp_notes = notes[res[[\"tables\"]][[tidx]][[\"notes\"]]]           tmp_notes = paste0(names(tmp_notes), \": \", unlist(tmp_notes))           tmp_notes = paste0(tmp_notes, collapse=\", \")           t_res[[\"notes\"]][[tidx]]   = tmp_notes         }       } pptx:   figures:     master:       name:       \"content_text\"       title_ph:   \"title\"       content_ph: \"content_body\"     width:  9.5     height: 5.0   tables:     master:       name:       \"content_text\"       title_ph:   \"title\"       content_ph: \"content_body\"   content:     - table: lg_tbl  docx:   figures:     landscape:       width:  8.0       height: 4.2     portrait:       width:  6.5       height: 6.0   content:     - text:         text:  \"Tables\"         style: Heading_1     - table: lg_tbl"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reporting nlmixr2 Fit Results","text":"purpose nlmixr2rpt automate reporting nlmixr2 analyses. accomplished creating yaml file contains reporting options, figure table generation code, general content Word PowerPoint files.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"general-workflow","dir":"Articles","previous_headings":"","what":"General workflow","title":"Reporting nlmixr2 Fit Results","text":"First need nlmixr2 fit object. ’re going load fit example stored package: Next need create onbrand report objects. create report objects PowerPoint (obnd_pptx) Word (obnd_docx). Next add report elements report objects using report_fit() function. function can used types report. contents different depending document type. function append report elements supplied fit object supplied report. multiple fit objects can added sequentially. can also add report content using onbrand officer functions. ’re done just need save reports: contents report type defined yaml file. commands use default value found nlmixr2rpt package. customize report elements can make copy file current working directory: can edit my_report.yaml file call report_fit() provide yaml file rptyaml argument. following section describe elements yaml report format.","code":"library(nlmixr2rpt) library(onbrand)    # This will create an example fit object to use in the examples below fit = fetch_fit_example() obnd_pptx = read_template(   template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),   mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  obnd_docx = read_template(   template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),   mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\")) obnd_pptx = report_fit(   fit     = fit,    obnd    = obnd_pptx)  obnd_docx = report_fit(   fit     = fit,    obnd    = obnd_docx) save_report(obnd_pptx, \"report.pptx\") save_report(obnd_docx, \"report.docx\") file.copy(system.file(package=\"nlmixr2rpt\", \"templates\", \"report_fit.yaml\"),            \"my_report.yaml\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"the-yaml-report-file-structure","dir":"Articles","previous_headings":"","what":"The yaml report file structure","title":"Reporting nlmixr2 Fit Results","text":"core nlmixr2rpt yaml reporting file. outline main sections describe expected elements sections.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"placeholders","dir":"Articles","previous_headings":"The yaml report file structure","what":"placeholders","title":"Reporting nlmixr2 Fit Results","text":"may wish create report template placeholders. example want create generic template population PK analysis, may useful label figures generically. can use section define placeholders applied report created. example consider yaml code : create report can label y-axis generically : \"===CMPD=== (===CUNITS===)\" report built, become: \"Compound Name (Conc Units)\" Notice OBJ placeholder contains R Code. default reporting process try evaluate placeholders R Code. fails revert back string supplied. run problems can quote placeholder value double single quotes. example: ISSTR field just result string \"ls()\" ISCMD field return list objects environment string evaluated. also possible overwrite contents file runtime providing placeholders (placeholder) argument report_fit(). Note: Fields support placeholders indicated [PH] fields evaluable code indicated [EV].","code":"placeholders:   CMPD: Compound Name   CUNITS: Conc Units   OBJ: sprintf(\"%3g\", fit$objf) ISSTR:\"'ls()'\"   ISCMD: ls()"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"parameters","dir":"Articles","previous_headings":"The yaml report file structure","what":"parameters","title":"Reporting nlmixr2 Fit Results","text":"certain reporting elements may better present parameters differently parameter names used model. nlmixr can use comment parameter definition specify alternate text. function gen_pest_table() use alternate text present. parameters section flexability parameters reported. can define parameters want whether present model . used present. tables Word PowerPoint can specify names using markdown (md), otherwise can specify handled text environments (txt). example intrinsic clearance may called lCLint model. can specify : also possible overwrite contents file runtime providing parameters argument report_fit(). Note: specify parameter name overwrite alternate text specified model ini().","code":"parameters:   lCLint:         md:  \"CL~int~ (L/hr)\"         txt: \"CLint (L/hr)\""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"covariates","dir":"Articles","previous_headings":"The yaml report file structure","what":"covariates","title":"Reporting nlmixr2 Fit Results","text":"figure table generation can useful covariates defined. can define either categorical (cat) continuous (cont). example define categorical covariates SEX ROUTE continuous covariate WT following: don’t need covariates can set NULL. want overwrite runtime can specify different values calling report_fit(). available figure table runtime environments objects cat_covars categorical covariates cont_covars continuous covariates.","code":"covariates:   cat: [\"SEX\", \"ROUTE\"]   cont: [\"WT\"]"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"options","dir":"Articles","previous_headings":"The yaml report file structure","what":"options","title":"Reporting nlmixr2 Fit Results","text":"section allows control general report options. element can either explicit value. identified evaluable [EV] first attempt evaluate R code. fails explicit value used. following options supported expected data type parentheses: output_dir[PH,EV] - location figures generated (character) resolution[EV] - Resolution figures generated (numeric) figenv_preamble tabenv_preamble - User-defined code evaluated figures tables built (specify libraries needed, source files containing user defined code, etc.) fig_stamp[PH] - set string stamp contents string lower left portion figure writing. applies figures p_res object either vanilla ggplot object, paginated ggforce object, result ggarrage ggpubr package. Along regular placeholders, option can also contain ===FILE=== placeholder. replaced full path figure file generated.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"building-figures-tables","dir":"Articles","previous_headings":"The yaml report file structure","what":"Building figures & tables","title":"Reporting nlmixr2 Fit Results","text":"Figures tables defined terms R code evaluated. several objects available environment can used creating report elements. following objects defined: fid - current figure ID (figure environment ) tid - current table ID (table environment ) fit - nlmixr2 fit object cat_covars - character object containing categorical covariates cont_covars - character object containing continuous covariates height - figure height inches (figure environment ) obnd - onbrand object report document output_dir - directory figures stored resolution - resolution figure (figure environment ) rptdetails - result reading report yaml file rpttype - either “Word” “PowerPoint” width - figure width inches (figure environment ) xpdb - default yaml file contains code preamble create object running xpose_data_nlmixr(fit) (figure environment )","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"figures","dir":"Articles","previous_headings":"The yaml report file structure","what":"figures","title":"Reporting nlmixr2 Fit Results","text":"figures section consists figure IDs. IDs used defining Word PowerPoint report contents. Consider example: creates figure ID dv_vs_pred. following elements: orientation - Orientation used Word report, can either “portrait” “landscape”. caption[PH] - Figure caption Word reports. caption_format - element optional can either \"text\"(default plain text) \"md\" (Markdown). notes - Notes figure. notes_format - element optional can either \"text\"(default plain text) \"md\" (Markdown). title[PH] - Slide title figure used PowerPoint. cmd[PH] - Command generate figure. Note: cmd evaluated needs create variable called p_res. can either ggplot object, paginated object ggforce, result ggarrage ggpubr package, vector file names containing image files created code cmd. want conditionally skip reporting figure, can instead set value p_res NA. generate message prevent inclusion build error final document. also include libraries want relevant preamble section ensure functions available .","code":"figures:   dv_vs_pred:     orientation:    \"portrait\"     caption:        \"dv_vs_pred caption\"     caption_format: \"text\"     title:          \"dv_vs_pred title\"     cmd: |-       p_res <- dv_vs_pred(xpdb, caption=NULL, title=NULL) +       xlab(\"Observed ===CMPD=== Concentrations (===CUNITS===)\") +       ylab(\"Population Predicted ===CMPD=== Concentrations (===CUNITS===)\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"tables","dir":"Articles","previous_headings":"The yaml report file structure","what":"tables","title":"Reporting nlmixr2 Fit Results","text":"Tables behave similarly figures. tables section create table ID following options specified. orientation - Orientation used Word report, can either “portrait” “landscape”. caption[PH] - Table caption Word reports. caption_format - element optional can either \"text\"(default plain text) \"md\" (Markdown). notes_format - element optional can either \"text\"(default plain text) \"md\" (Markdown). title[PH] - Slide title table used PowerPoint. cmd[PH] - Command generate table. example create table parameter estimates. Note: cmd evaluated needs create variable called t_res. list can contain following elements: df - List data frames containing tabular information. ft - List flextables containing tabular information notes - Optional list table notes. supply data frames list element, converted flextables internally. Flextables span multiple pages automatically. prefer caption page can split tables manually multiple data frames/flextables (see span_table() onbrand package). reporting functionality written support table spanning multiple pages. define separate table page need add sequential list elements df ft elements. example: single table want span multiple pages automatically simply specify first element listed (e.g. t_res$df[[1]]). want conditionally skip generation table, simply set t_res NA. Like figures , signal reporting functions want generate table current fit object. also prevent generation build error.","code":"tables:   pest_table:      orientation:    \"portrait\"       caption:        \"Parameter Estimates\"     caption_format: \"text\"     title:          \"Parameter Estimates\"        cmd: |-        t_res <- gen_pest_table(       fit        = fit,        obnd       = obnd,       rptdetails = rptdetails) t_res$df = list() t_res$df[[1]] = data.frame() t_res$df[[2]] = data.frame() etc t_res$ft = list() t_res$ft[[1]] = flextable::flextable()  t_res$ft[[2]] = flextable::flextable()  etc"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"pptx","dir":"Articles","previous_headings":"The yaml report file structure","what":"pptx","title":"Reporting nlmixr2 Fit Results","text":"section defines general aspects PowerPoint reports also contents report relating fitting results. figures tables sections contain onbrand slide master names (\"content_text\") used hold objects. slides created title specified figure table IDs. placeholder name title (\"title\") must specified well placeholder name content (\"content_body\"). Figures PowerPoint reports must generated dimensions placeholder, important width height elements specified inches. actual content specified content section. list keywords followed value. table keyword followed table ID defined tables section. Similarly figure keyworld followed figure ID defined figures section:","code":"pptx:   figures:     master:          name:       \"content_text\"             title_ph:   \"title\"          content_ph: \"content_body\"     width:  9.5     height: 5.0   tables:       master:          name:       \"content_text\"             title_ph:   \"title\"          content_ph: \"content_body\" content:       - table: pest_table     - figure: ind_plots     - figure: dv_vs_pred     - figure: dv_vs_ipred     - figure: res_vs_pred     - figure: res_vs_idv     - figure: prm_vs_iteration     - figure: absval_res_vs_pred"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"docx","dir":"Articles","previous_headings":"The yaml report file structure","what":"docx","title":"Reporting nlmixr2 Fit Results","text":"section starts general information word documents. figures section defines height width figures landscape portrait orientations. units inches. Just like PowerPoint content defined content section. can defined figure table PowerPoint. Content can also include text elements well. Just specify onbrand style control general formatting.","code":"docx:   figures:     landscape:       width:  8.0       height: 4.2     portrait:       width:  6.5       height: 6.0 content:     - text:          text:  \"Figures\"         style: Heading_1     - figure: dv_vs_pred     - figure: ind_plots     - figure: dv_vs_ipred     - figure: res_vs_pred     - figure: res_vs_idv     - figure: prm_vs_iteration     - figure: absval_res_vs_pred     - text:          text:  \"Tables\"         style: Heading_1     - table: pest_table"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"customizing-reports-for-your-organization","dir":"Articles","previous_headings":"","what":"Customizing reports for your organization","title":"Reporting nlmixr2 Fit Results","text":"reporting done using onbrand package. provides abstraction layer officer package. benefit can use organization Word PowerPoint templates. Simply create appropriate masters PowerPoint styles Word, create brand mapping file. initialize report objects can just provide organizational template mapping files. details create templates mapping files, see vignette onbrand package.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"powerpoint","dir":"Articles","previous_headings":"Customizing reports for your organization","what":"PowerPoint","title":"Reporting nlmixr2 Fit Results","text":"create onbrand PowerPoint template organization need following master slide names define corresponding elements. Master/Template onbrand Content Name Placeholder Type title_slide title text sub_title text section_slide title text sub_title text title_only title text content_text title text sub_title text content_body text content_list title text sub_title text content_body list two_content_header_list title text sub_title text content_left_header text content_left list content_right_header text content_right list two_content_header_text title text sub_title text content_left_header text content_left text content_right_header text content_right text two_content_list title text sub_title text content_left list content_right list two_content_text title text sub_title text content_left text content_right text","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"word","dir":"Articles","previous_headings":"Customizing reports for your organization","what":"Word","title":"Reporting nlmixr2 Fit Results","text":"Similarly, create onbrand Word template need following onbrand styles defined. onbrand Word Style Style Style Type Code Code paragraph Figure_Caption graphic title paragraph Heading_1 heading 1 paragraph Heading_2 heading 2 paragraph Heading_3 heading 3 paragraph Normal Normal paragraph Notes Notes paragraph TOC toc 1 paragraph Table_Caption table title paragraph Table Table Grid table","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/articles/Reporting_nlmixr_Fit_Results.html","id":"report-configuration-file-report_fit-yaml","dir":"Articles","previous_headings":"","what":"Report configuration file report_fit.yaml","title":"Reporting nlmixr2 Fit Results","text":"","code":"placeholders:   CMPD: Compound Name   CUNITS: Conc Units   TUNITS: Time Units   RUN: RUNN   OBJ: sprintf(\"%3g\", fit$objf) parameters:   lVp:     md:  \"V~p~\"     txt: \"Vp\"    add_err:     md:  \"Add Err\"     txt: \"Add Err\"   prop_err:     md:  \"Prop Err\"     txt: \"Prop Err\" covariates:   cat:  NULL   cont: NULL options:   output_dir:   \"file.path(getwd(), '===RUN===')\"   resolution:   300   fig_stamp:    \"source: ===FILE===\"   figenv_preamble: |-     library(\"ggplot2\")     library(\"xpose\")     library(\"ggforce\")     if(system.file(package=\"ggPMX\") != \"\"){       library(\"ggPMX\")        }     xpdb = xpose.nlmixr2::xpose_data_nlmixr(fit)   tabenv_preamble: NULL figures:   dv_vs_pred_ipred:     orientation: \"portrait\"     caption:     \"Observed vs Predicted\"     title:       \"Observed vs Predicted\"     cmd: |-       p_pred <- dv_vs_pred(xpdb, caption=NULL, title=NULL, subtitle=NULL) +       ggtitle(\"===CMPD=== (===CUNITS===)\") +       coord_fixed()+       ylab(\"Observed\") +       xlab(\"Population Predicted\") +       theme_light()       yrange = layer_scales(p_pred)$y$range$range       xrange = layer_scales(p_pred)$x$range$range       lb = min(c(yrange,xrange))       ub = max(c(yrange,xrange))       p_pred = p_pred + xlim(c(lb, ub)) + ylim(c(lb,ub))        p_ipred <- dv_vs_ipred(xpdb, caption=NULL, title=NULL, subtitle=NULL) +       ggtitle(\"===CMPD=== (===CUNITS===)\") +       coord_fixed()+       ylab(\"Observed\") +       xlab(\"Individual Predicted\") +       theme_light()       yrange = layer_scales(p_ipred)$y$range$range       xrange = layer_scales(p_ipred)$x$range$range       lb = min(c(yrange,xrange))       ub = max(c(yrange,xrange))       p_ipred = p_ipred + xlim(c(lb, ub)) + ylim(c(lb,ub))       p_res <- ggpubr::ggarrange(p_pred, p_ipred, ncol=2, nrow=1 )   res_vs_pred_idv:     orientation: \"portrait\"     caption:     \"CWRES vs Pred and Time\"     title:       \"CWRES vs Pred and Time\"     cmd: |-       if(\"CWRES\" %in% names(fit)){         p_pred <- res_vs_pred(xpdb, caption=NULL, title=NULL, res=\"CWRES\") +         ggtitle(\"===CMPD=== (===CUNITS===)\") +         ylab(\"CWRES\") +         xlab(\"Population Predicted\") +         theme_light()                  p_idv  <- res_vs_idv(xpdb, caption=NULL, title=NULL, res=\"CWRES\") +         ggtitle(\"Time (===CUNITS===)\") +         ylab(\"CWRES\") +         xlab(\"Time (===TUNITS===)\") +         theme_light()          p_res <- ggpubr::ggarrange(p_pred, p_idv, ncol=2, nrow=1 )       } else {         p_res <- NA       }   eta_cat:     orientation: \"landscape\"     caption:     \"Effect of categorical covariates\"     title:       \"Effect of categorical covariates\"     cmd: |-       if(!is.null(cat_covars)){         if(system.file(package=\"ggPMX\") != \"\"){           ctr = ggPMX::pmx_nlmixr(fit,                   vpc = FALSE,                   conts = cont_covars,                    cats  = cat_covars)           p_res <- ggPMX::pmx_plot_eta_cats(ctr) +             theme_light()         } else {           p_res <- mk_error_fig(\"ggPMX is not installed\")         }       } else {         p_res <- NA       }   eta_cont:     orientation: \"landscape\"     caption:     \"Effect of continuous covariates\"     title:       \"Effect of continuous covariates\"     cmd: |-       if(!is.null(cont_covars)){         if(system.file(package=\"ggPMX\") != \"\"){           ctr = ggPMX::pmx_nlmixr(fit,                   vpc = FALSE,                   conts = cont_covars,                    cats  = cat_covars)           p_res <- ggPMX::pmx_plot_eta_conts(ctr) +              theme_light()         } else {           p_res = mk_error_fig(\"ggPMX is not installed\")         }       } else {         p_res <- NA       }   prm_vs_iteration:     orientation: \"landscape\"     caption:     \"SAEM Stabilization\"     title:       \"SAEM Stabilization\"     cmd: |-       p_res <- prm_vs_iteration(xpdb, caption=NULL, title=NULL) +         theme_light()   ind_plots:     orientation: \"landscape\"     caption:     \"Individual and population prediction overlay\"     title:       \"Individual and population prediction overlay\"     cmd: |-       p_res <- ind_plots(xpdb, nrow=3, ncol=4, caption=NULL, title=NULL)  +       ylab(\" ===CMPD=== (===CUNITS===)\") +       xlab(\"Time (===TUNITS===)\")  +       theme_light()   skip_figure:     orientation: \"landscape\"     caption:     \"ind_plots caption\"     title:       \"ind_plots title\"     cmd: |-       p_res <- NA tables:   skip_table:     orientation: \"portrait\"     caption:     \"Parameter Estimates\"     title:       \"Parameter Estimates\"     cmd: |-       t_res <- NA   pest_table:     orientation: \"portrait\"     caption:     \"Parameter Estimates\"     title:       \"Parameter Estimates\"     cmd: |-       t_res <- gen_pest_table(       fit        = fit,       obnd       = obnd,       rptdetails = rptdetails) pptx:   figures:     master:       name:       \"content_text\"       title_ph:   \"title\"       content_ph: \"content_body\"     width:  9.5     height: 5.0   tables:     master:       name:       \"content_text\"       title_ph:   \"title\"       content_ph: \"content_body\"   content:     - table: pest_table     - table: skip_table     - figure: ind_plots     - figure: dv_vs_pred_ipred     - figure: res_vs_pred_idv     - figure: prm_vs_iteration     - figure: eta_cont     - figure: eta_cat     - figure: skip_figure docx:   figures:     landscape:       width:  8.0       height: 4.2     portrait:       width:  6.5       height: 6.0   content:     - text:         text:  \"Tables\"         style: Heading_1     - table: pest_table     - text:         text:  \"Figures\"         style: Heading_1     - figure: ind_plots     - figure: dv_vs_pred_ipred     - figure: res_vs_pred_idv     - figure: prm_vs_iteration     - figure: skip_figure     - figure: eta_cont     - figure: eta_cat"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Harrold. Author, maintainer.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harrold J (2025). nlmixr2rpt: Templated Word PowerPoint Reporting 'nlmixr2' Fitting Results. R package version 0.2.1, https://nlmixr2.github.io/nlmixr2rpt/.","code":"@Manual{,   title = {nlmixr2rpt: Templated Word and PowerPoint Reporting of 'nlmixr2' Fitting Results},   author = {John Harrold},   year = {2025},   note = {R package version 0.2.1},   url = {https://nlmixr2.github.io/nlmixr2rpt/}, }"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"nlmixr2rpt-","dir":"","previous_headings":"","what":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"Templated Word PowerPoint reporting nlmixr2","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"purpose package automate reporting analyses performed nlmixr2 package PowerPoint Word. accomplished yaml file contains specifications report elements (figures tables) well contents Word PowerPoint documents. Internal templates documents report yaml file included. can customized: format document templates can customized organization using onbrand package. report contents can customized creating copy included yaml file modifying suite needs (see vignette ).","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"install CRAN: install development version GitHub","code":"install.packages(\"nlmixr2rpt\", dependencies = TRUE) #install.packages(\"devtools\")  devtools::install_github(\"nlmixr2/nlmixr2rpt\", dependencies=TRUE)"},{"path":[]},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"powerpoint","dir":"","previous_headings":"Getting Started","what":"PowerPoint","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"Assuming results nlmixr analysis object fit can dump results PowerPoint document following: creates onbrand reporting object obnd_pptx. can add reporting elements using onbrand officer. Next command report_fit() append results fit object onbrand report. calling report_fit() can append reporting elements. Finally just need save document using save_report().","code":"obnd_pptx = read_template(   template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),   mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  obnd_pptx = report_fit(   fit     = fit,    obnd    = obnd_pptx)  save_report(obnd_pptx, \"report.pptx\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"word","dir":"","previous_headings":"Getting Started","what":"Word","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"process Word document . simply need use Word onbrand template instead PowerPoint.","code":"obnd_docx = read_template(   template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),   mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  obnd_docx = report_fit(   fit     = fit,    obnd    = obnd_docx)  save_report(obnd_docx, \"report.docx\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/index.html","id":"further-reading","dir":"","previous_headings":"","what":"Further reading","title":"Templated Word and PowerPoint Reporting of nlmixr2 Fitting Results","text":"want learn customizing outputs using organizational templates reporting, sure browse documentation check vignettes: Reporting nlmixr Fit Results Accessing Figures Tables","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_figures.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates Figures for an nlmixr2 Report — build_figures","title":"Generates Figures for an nlmixr2 Report — build_figures","text":"Creates figures specified rptyaml file","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_figures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates Figures for an nlmixr2 Report — build_figures","text":"","code":"build_figures(   obnd = NULL,   fit = NULL,   rptdetails = NULL,   cat_covars = NULL,   cont_covars = NULL,   verbose = TRUE )"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_figures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates Figures for an nlmixr2 Report — build_figures","text":"obnd onbrand report object report elements appended fit nlmixr2 fit object reported rptdetails Object created  reading rptyaml file cat_covars character vector categorical covariates overwrite defaults yaml file cont_covars character vector continuous covariates overwrite defaults yaml file verbose Boolean variable set TRUE (default) messages displayed terminal","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_figures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates Figures for an nlmixr2 Report — build_figures","text":"List containing figures following structure: \"rptfigs\" - List figures names corresponding figure ids yaml file. figure ID contains following elements: \"figure\"       - list figure file names current fid \"orientation\"  - Figure orientation (\"portrait\" \"landscape\") \"isgood\"       - Boolean variable indicating success failure \"skip\"         - Boolean variable indicating whether figure skipped reporting \"fmsgs\"        - Vector messages \"cmd\"          - Original plot generation command \"cmd_proc\"     - Plot generation command processing placeholders \"height\"       - Figure height \"width\"        - Figure width \"caption\"      - Caption Word \"caption_proc\" - Caption Word processing placeholders \"title\"        - Slide title PowerPoint \"title_proc\"   - Slide title PowerPoint processing placeholders \"isgood\" - Boolean variable indicating success failure \"msgs\" - Vector messages","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_figures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates Figures for an nlmixr2 Report — build_figures","text":"","code":"# We need an onbrand object to use below library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # We also need an nlmixr fit object fit = fetch_fit_example()  # This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails  # Now we will build the figures bfres = build_figures(obnd       = obnd,                      fit        = fit,                      rptdetails = rptdetails) #>  #> Attaching package: ‘xpose’ #> The following object is masked from ‘package:stats’: #>  #>     filter #>  #> ── Building report figures  #> → dv_vs_pred #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #>   • #>   /var/folders/pq/7srbf_fx3rd3k706hgxkg61r0000gp/T//Rtmpj4kJZK/RUNN/dv_vs_pred-Word.png #> → bad_figure #>  #> ── Figure generation failed  #> → figure id: bad_figure #> → Unable to generate figure #> →  -> call:    eval, parse(text = finfo[[\"cmd_proc\"]]) #> →  -> message: object 'bad_figure_command' not found #> → command run: #> → bad_figure_command #>   • #>   /var/folders/pq/7srbf_fx3rd3k706hgxkg61r0000gp/T//Rtmpj4kJZK/RUNN/bad_figure-Word.png #> → skip_figure"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates Tables for an nlmixr2 Report — build_tables","title":"Generates Tables for an nlmixr2 Report — build_tables","text":"Creates tables specified rptyaml file","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates Tables for an nlmixr2 Report — build_tables","text":"","code":"build_tables(   obnd = NULL,   fit = NULL,   rptdetails = NULL,   cat_covars = NULL,   cont_covars = NULL,   verbose = TRUE )"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates Tables for an nlmixr2 Report — build_tables","text":"obnd onbrand report object report elements appended fit nlmixr2 fit object reported rptdetails object creating reading rptyaml file cat_covars character vector categorical covariates overwrite defaults yaml file cont_covars character vector continuous covariates overwrite defaults yaml file verbose Boolean variable set TRUE (default) messages displayed terminal","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates Tables for an nlmixr2 Report — build_tables","text":"List containing tables following structure: \"rpttabs\" - List tables names corresponding table ids yaml file. contains elements yamle file following elements: \"table\"        - Result build (t_res object) \"orientation\"  - Table orientation (\"portrait\" \"landscape\") \"isgood\"       - Boolean variable indicating success failure \"skip\"         - Boolean variable indicating whether table skipped reporting \"tmsgs\"        - Vector messages \"cmd\"          - Original plot generation command \"cmd_proc\"     - Plot generation command processing placeholders \"height\"       - Table height \"width\"        - Table width \"caption\"      - Caption Word \"caption_proc\" - Caption Word processing placeholders \"title\"        - Slide title PowerPoint \"title_proc\"   - Slide title PowerPoint processing placeholders \"isgood\" - Boolean variable indicating success failure \"msgs\" - Vector messages","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/build_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates Tables for an nlmixr2 Report — build_tables","text":"","code":"# We need an onbrand object to use below # \\donttest{ library(onbrand)   obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # We also need an nlmixr fit object fit = fetch_fit_example()  # This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails  # Now we will build the tables  btres = build_tables(obnd        = obnd,                      fit        = fit,                       rptdetails = rptdetails) #>  #> ── Building report tables  #> → pest_table #> → bad_table #>  #> ── Table generation failed  #> → Unable to generate table #> →  -> call:    eval, parse(text = tinfo[[\"cmd_proc\"]]) #> →  -> message: object 'bad_table_command' not found #> → table id: bad_table #> → command run: #> → bad_table_command #> → skip_table # }"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/eval_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate R Code in String — eval_str","title":"Evaluate R Code in String — eval_str","text":"Attempts evaluate string chunk R code.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/eval_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate R Code in String — eval_str","text":"","code":"eval_str(estr = \"\", fit = NULL)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/eval_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate R Code in String — eval_str","text":"estr Object creating reading rptyaml file fit nlmixr2 fit object reported","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/eval_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate R Code in String — eval_str","text":"String containing evaled character original string","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/eval_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate R Code in String — eval_str","text":"","code":"res = eval_str(estr=\"ls()\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fdim.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets Figure Dimensions — fetch_fdim","title":"Gets Figure Dimensions — fetch_fdim","text":"given figure id report type pull dimensions figure.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fdim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets Figure Dimensions — fetch_fdim","text":"","code":"fetch_fdim(obnd = NULL, fid = NULL, fdim = \"width\", rptdetails = NULL)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fdim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets Figure Dimensions — fetch_fdim","text":"obnd onbrand report object report elements appended fid Figure ID used figures section yaml file fdim Dimension fetch either \"width\" \"height\" rptdetails Object creating reading rptyaml file","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fdim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets Figure Dimensions — fetch_fdim","text":"ggplot object","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fdim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets Figure Dimensions — fetch_fdim","text":"","code":"library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # This will create an example fit object to use in the examples below fit = fetch_fit_example()  # This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails  fetch_fdim(obnd=obnd, fid=\"bad_figure\", fdim=\"width\", rptdetails=rptdetails) #> [1] 9.5  fetch_fdim(obnd=obnd, fid=\"bad_figure\", fdim=\"height\", rptdetails=rptdetails) #> [1] 5"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fit_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Fit Example — fetch_fit_example","title":"Fetch Fit Example — fetch_fit_example","text":"Creates nlmixr2 fit example using posthoc estimation method testing purposes. displayed terminal following:","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fit_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Fit Example — fetch_fit_example","text":"","code":"fetch_fit_example(use_cache = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fit_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Fit Example — fetch_fit_example","text":"use_cache Boolean variable used cache fit process current R session.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fit_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Fit Example — fetch_fit_example","text":"Example nlmixr2 fit object","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_fit_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Fit Example — fetch_fit_example","text":"","code":"fit = fetch_fit_example()"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Analysis Options — fetch_option","title":"Fetch Analysis Options — fetch_option","text":"Fetches analysis options report yaml applies strings.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Analysis Options — fetch_option","text":"","code":"fetch_option(rptdetails, option = NULL, fit = NULL, verbose = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Analysis Options — fetch_option","text":"rptdetails Object creating reading rptyaml file option String containing option fetch (see ) fit nlmixr2 fit object reported verbose Boolean variable set TRUE (default) messages displayed terminal following:","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Analysis Options — fetch_option","text":"List containing following information output directory \"isgood\" - Boolean variable indicating success failure \"msgs\" - Vector messages \"value\" - value option default specified","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch Analysis Options — fetch_option","text":"option can one following (default: NULL): \"output_dir\" - Directory place figures generated (default: tempdir()) \"resolution\" - Resolution figure files (default: 300)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/fetch_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Analysis Options — fetch_option","text":"","code":"library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # This will create an example fit object to use in the examples below fit = fetch_fit_example()  # This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails   fetch_option(rptdetails, option=\"output_dir\", fit=fit) #> $isgood #> [1] TRUE #>  #> $msgs #> NULL #>  #> $value #> [1] \"/var/folders/pq/7srbf_fx3rd3k706hgxkg61r0000gp/T//Rtmpj4kJZK/RUNN\" #>"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/gen_pest_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","title":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","text":"Generates flextable containting parameter estimates.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/gen_pest_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","text":"","code":"gen_pest_table(obnd = NULL, fit = NULL, rptdetails = NULL, verbose = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/gen_pest_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","text":"obnd onbrand report object report elements appended fit nlmixr2 fit object reported rptdetails object creating reading rptyaml file verbose Boolean variable set TRUE (default) messages displayed terminal","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/gen_pest_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","text":"List following elements \"isgood\"  - Boolean variable indicating success failure \"msgs\"    - Vector messages \"ft\"      - Parameter estimates flextable object \"df\"      - Parameter estimates data.frame","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/gen_pest_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes nlmixr2 Parameter Estimate Table for Reporting — gen_pest_table","text":"","code":"library(onbrand)   obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # This will create an example fit object to use in the examples below fit = fetch_fit_example()  #'# This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails  gen_pest_table(obnd = obnd, fit = fit, rptdetails = rptdetails, verbose = TRUE) #> $isgood #> [1] TRUE #>  #> $msgs #> NULL #>  #> $ft #> $ft[[1]] #>  #>  #> $df #> $df[[1]] #>        Parameter  Est.     SE %RSE Back-transformed(95%CI) BSV(CV%) Shrink(SD)% #> tka       Log Ka 0.476  0.203 42.7       1.61 (1.08, 2.39)     69.8      1.23%< #> tcl       Log Cl  1.02 0.0754 7.42        2.76 (2.38, 3.2)     26.1      2.36%< #> tv         Log V  3.46 0.0632 1.83         31.8 (28.1, 36)     13.8      9.71%< #> add.sd    add.sd 0.696                               0.696                      #>  #>"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_fig.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates ggplot Object with Error Message — mk_error_fig","title":"Generates ggplot Object with Error Message — mk_error_fig","text":"Takes vector messages returns ggplot object text figure. can used automated figure generation cascade error message end user.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_fig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates ggplot Object with Error Message — mk_error_fig","text":"","code":"mk_error_fig(msgs)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_fig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates ggplot Object with Error Message — mk_error_fig","text":"msgs Vector error messages","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_fig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates ggplot Object with Error Message — mk_error_fig","text":"ggplot object","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_fig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates ggplot Object with Error Message — mk_error_fig","text":"","code":"mk_error_fig(\"This is an error\")"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a flextable Object with Error Message — mk_error_tab","title":"Generates a flextable Object with Error Message — mk_error_tab","text":"Takes vector messages returns flextable object text table. can used automated table generation cascade error message end user.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a flextable Object with Error Message — mk_error_tab","text":"","code":"mk_error_tab(msgs)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a flextable Object with Error Message — mk_error_tab","text":"msgs Vector error messages","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a flextable Object with Error Message — mk_error_tab","text":"list single flextable object","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/mk_error_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a flextable Object with Error Message — mk_error_tab","text":"Error error","code":"error_tab = mk_error_tab(\"This is an error\") error_tab$ft[[1]] .cl-18ac8984{}.cl-18a9b308{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-18aadf1c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-18aaeb06{width:1.304in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18aaeb10{width:1.304in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}ErrorThis is an error"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/process_ph.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitutes Placehodlers in Strings — process_ph","title":"Substitutes Placehodlers in Strings — process_ph","text":"Takes placeholder information rptyaml file applies strings.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/process_ph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitutes Placehodlers in Strings — process_ph","text":"","code":"process_ph(str, rptdetails)"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/process_ph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitutes Placehodlers in Strings — process_ph","text":"str String process rptdetails Object creating reading rptyaml file (default: NULL)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/process_ph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitutes Placehodlers in Strings — process_ph","text":"processed string","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/process_ph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substitutes Placehodlers in Strings — process_ph","text":"","code":"library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # We also need an nlmixr fit object fit = fetch_fit_example()  # This reads in the report details as well rptdetails = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)$rptdetails  str = \"This is ===CMPD===\"  process_ph(str, rptdetails) #> [1] \"This is Compound Name\""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/report_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","title":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","text":"Appends nlmixr2 fit results onbrand report object content format report supplied yaml file","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/report_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","text":"","code":"report_fit(   obnd = NULL,   fit = NULL,   placeholders = NULL,   cat_covars = NULL,   cont_covars = NULL,   parameters = NULL,   rptyaml = system.file(package = \"nlmixr2rpt\", \"templates\", \"report_fit.yaml\"),   verbose = FALSE )"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/report_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","text":"obnd onbrand report object report elements appended . fit nlmixr2 fit object reported. placeholders Manual placeholders, see yaml_read_fit . cat_covars character vector categorical covariates overwrite defaults yaml file. cont_covars character vector continuous covariates overwrite defaults yaml file. parameters list element names parameter overwrite defaults yaml file. rptyaml yaml file containing report elements structure. verbose Boolean variable set TRUE messages .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/report_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","text":"onbrand object report elements added.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/report_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report nlmixr2 Fit Results to PowerPoint and Word — report_fit","text":"","code":"# \\donttest{ library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.pptx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # This will create an example fit object to use in the examples below fit = fetch_fit_example()  # Appening fit results obnd_pptx = report_fit(  fit     = fit,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  obnd    = obnd) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'  # Writing the report to a file save_report(obnd, file.path(tempdir(), \"report.pptx\")) #> $isgood #> [1] TRUE #>  #> $msgs #> NULL #>  # }"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/write_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes Figures to File — write_figure","title":"Writes Figures to File — write_figure","text":"Takes figure object, optionally stamps image, writes file dimensions figure.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/write_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes Figures to File — write_figure","text":"","code":"write_figure(   p_res = NULL,   page = NULL,   width = 3,   height = 3,   resolution = NULL,   fig_file = NULL,   fig_stamp = NULL,   verbose = TRUE )"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/write_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes Figures to File — write_figure","text":"p_res ggplot, ggforce paginated object, ggarrange object. page Page number write NULL ggplot object. width Width inches. height Height inches. resolution resolution dpi. fig_file File name write figure . fig_stamp Character object containing text stamp figure optional ===file=== placeholder. verbose Boolean variable set TRUE (default) messages . displayed terminal","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/write_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes Figures to File — write_figure","text":"list following \"isgood\" - Boolean variable indicating success failure \"msgs\" - Vector messages","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/write_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes Figures to File — write_figure","text":"","code":"library(ggplot2) write_figure(  p_res = ggplot(),  page = NULL,  width = 3,  height = 3,  resolution = 200,  fig_file = file.path(tempdir(), \"write_figure_example.png\"),  fig_stamp = \"stamp\",  verbose = TRUE) #> $isgood #> [1] TRUE #>  #> $msgs #> NULL #>"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/yaml_read_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads and Checks report_fit.yaml File — yaml_read_fit","title":"Reads and Checks report_fit.yaml File — yaml_read_fit","text":"Reads report yaml file looks make sure necessary fields given report.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/yaml_read_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads and Checks report_fit.yaml File — yaml_read_fit","text":"","code":"yaml_read_fit(   obnd = NULL,   rptyaml = NULL,   placeholders = NULL,   parameters = NULL,   fit = NULL )"},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/yaml_read_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads and Checks report_fit.yaml File — yaml_read_fit","text":"obnd onbrand report object report elements appended . rptyaml yaml file containing report elements structure. placeholders list placeholders overwrite defaults yaml file. parameters list element names parameter overwrite runtime. named list example RUN may \"RUNN\" yaml file. overwrite just provide list(RUN=\"RUN_1\") (default: NULL) fit nlmixr2 fit object reported.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/yaml_read_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads and Checks report_fit.yaml File — yaml_read_fit","text":"List containing following information report \"isgood\" - Boolean variable indicating success failure \"msgs\" - Vector messages \"rpttype\" - Type onbrand report (\"Word\" \"PowerPoint\") \"rptfigfmt\" - Default figure formatting (orientation dimensions) \"rpttabfmt\" - Default table formatting (orientation dimensions) \"rptdetails\" - Contents yaml file \"rptcont\" - Contents report generate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/reference/yaml_read_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads and Checks report_fit.yaml File — yaml_read_fit","text":"","code":"# We need an onbrand object to use below library(onbrand) obnd = read_template(  template = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.docx\"),  mapping  = system.file(package=\"nlmixr2rpt\", \"templates\",\"nlmixr_obnd_template.yaml\"))  # We also need an nlmixr fit object fit = fetch_fit_example()  # This reads in the report details yaml_read_res = yaml_read_fit(  obnd    = obnd,  rptyaml = system.file(package=\"nlmixr2rpt\", \"examples\", \"report_fit_test.yaml\"),  fit     = fit)"},{"path":[]},{"path":"https://nlmixr2.github.io/nlmixr2rpt/news/index.html","id":"nlmixr2rpt-021","dir":"Changelog","previous_headings":"","what":"nlmixr2rpt 0.2.1","title":"nlmixr2rpt 0.2.1","text":"Added notes option tables figures Word Added example show use span_table() onbrand create multi-page tables notes, consistent captions, etc. Rearranged default order tables figures caption, figure/table, notes Updated work mixrverse","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/news/index.html","id":"nlmixr2rpt-020","dir":"Changelog","previous_headings":"","what":"nlmixr2rpt 0.2.0","title":"nlmixr2rpt 0.2.0","text":"CRAN release: 2023-06-06 Fixing error CRAN","code":""},{"path":"https://nlmixr2.github.io/nlmixr2rpt/news/index.html","id":"nlmixr2rpt-010","dir":"Changelog","previous_headings":"","what":"nlmixr2rpt 0.1.0","title":"nlmixr2rpt 0.1.0","text":"CRAN release: 2022-12-05 Initial release","code":""}]
